fpath=( "$HOME/.zfunctions" $fpath )

ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh

bindkey -e

################################################################################
## common functions
################################################################################
cmd-exists() {
    type "$1" > /dev/null 2>&1
}

node-version() {
    if cmd-exists "node"; then
        local VERSION="$(node -v | sed 's/v//')"
        echo -n "%{\e[33m%}\ue60c ${VERSION}%{\e[m%}" # 
    fi
}

ruby-version() {
    if cmd-exists "ruby"; then
        local VERSION="$(ruby -v | sed -E 's/ruby ([0-9]+\.[0-9]+\.[0-9]+)p.+/\1/')"
        echo -n "%{\e[31m%}\ue791 ${VERSION}%{\e[m%}" # 
    fi
}

go-version() {
    if cmd-exists "go"; then
        local VERSION="$(go version | sed -E 's/go version go([0-9]+\.[0-9]+\.[0-9]+) .+/\1/')"
        echo -n "%{\e[34m%}\ue626 ${VERSION}%{\e[m%}" # 
    fi
}

################################################################################
## zsh plugins
################################################################################
source $ZPLUG_HOME/repos/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $ZPLUG_HOME/repos/zsh-users/zsh-history-substring-search/zsh-history-substring-search.zsh
source $ZPLUG_HOME/repos/zsh-users/zsh-autosuggestions/zsh-autosuggestions.zsh
source $ZPLUG_HOME/repos/b4b4r07/enhancd/init.sh

# just listing plugins for zplug to manage these repos
zplug zsh-users/zsh-syntax-highlighting
zplug zsh-users/zsh-history-substring-search
zplug zsh-users/zsh-autosuggestions
zplug b4b4r07/enhancd
zplug sindresorhus/pure

if [ $DOTFILES/.zshrc -nt ~/.zshrc.zwc ]; then
    zcompile ~/.zshrc
fi

################################################################################
## History configuration
################################################################################
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=10000
export SAVEHIST=1000000
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt append_history
setopt share_history

function fzf-history-selection() {
    BUFFER=`history -n 1 | awk '!a[$0]++' | fzf --tac`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N fzf-history-selection
bindkey '^R' fzf-history-selection

bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

################################################################################
## Git functions
################################################################################
function git-checkout() {
    if [ -n "$1" ]; then
        git checkout "$1"
    else
        local branches branch
        branches=$(git branch -avv | grep -v HEAD) \
        && branch=$(echo "$branches" | fzf +s) \
        && git checkout $(echo "$branch" | awk '$0=$1' | sed "s/\(remotes\/origin\/\)*//")
    fi
}

function git-checkout-tag() {
    local tags tag
    tags=$(git tag | sort -r) \
    && tag=$(echo "$tags" | fzf +m) \
    && git checkout $tag
}

function git-current-branch-name() {
    git branch | grep '^\*' | sed 's/^\* *//'
}

################################################################################
## Aliases
################################################################################
alias t='tig'
alias st='tig status'
alias p='git pull origin'
alias gl='git log --decorate'
alias glo='git log --oneline'
alias c='git-checkout'
alias ct='git-checkout-tag'
alias cb='git checkout -b'
alias b='git branch'
alias f='git fetch --prune'
alias cm='git commit'

alias -g B='$(git-current-branch-name)'
alias pb='git push -u origin B'

alias vi='nvim'

alias ll='ls -l'
alias la='ls -al'

################################################################################
## Completion config                                                          
################################################################################
autoload colors; colors

export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:default' menu select=2

################################################################################
## rbenv config
################################################################################
if cmd-exists "rbenv"; then
    eval "$(rbenv init -)"
fi

################################################################################
## goenv config
################################################################################
if cmd-exists "goenv"; then
    export GOENV_ROOT="$HOME/.goenv"
    export GOPATH="$HOME/go"
    export PATH="$GOPATH/bin:$GOENV_ROOT/bin:$PATH"
    eval "$(goenv init -)"
fi

################################################################################
## prompt
################################################################################
autoload -U promptinit; promptinit
prompt pure

precmd() {
    RPROMPT="$(ruby-version) | $(node-version) | $(go-version)"
}

## エディタでライン編集
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

